#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –≤—ã–≤–æ–¥–æ–º —Å—Ç–∞—Ç—É—Å–∞
"""
import subprocess
import sys
import os
from pathlib import Path

def run_tests():
    """–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –≤—ã–≤–æ–¥–æ–º"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ç–µ—Å—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ flare-lab")
    print("=" * 50)
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
    project_root = Path(__file__).parent.parent
    os.chdir(project_root)
    
    # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ pytest
    cmd = [
        sys.executable, "-m", "pytest",
        "tests/",
        "-v",
        "--tb=short",
        "--color=yes",
        "--durations=10",
        "--html=tests/report.html",
        "--self-contained-html"
    ]
    
    print(f"üìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
    print(f"üîß –ö–æ–º–∞–Ω–¥–∞: {' '.join(cmd)}")
    print("=" * 50)
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
        result = subprocess.run(cmd, capture_output=False, text=True)
        
        print("=" * 50)
        if result.returncode == 0:
            print("‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        else:
            print("‚ùå –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–®–õ–ò!")
        
        print(f"üìä –ö–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞: {result.returncode}")
        print(f"üìÑ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: tests/report.html")
        
        return result.returncode
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–æ–≤: {e}")
        return 1

def run_unit_tests():
    """–ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ unit —Ç–µ—Å—Ç–æ–≤"""
    print("üî¨ –ó–∞–ø—É—Å–∫ unit —Ç–µ—Å—Ç–æ–≤...")
    cmd = [sys.executable, "-m", "pytest", "tests/test_unit_*.py", "-v", "--color=yes"]
    return subprocess.run(cmd).returncode

def run_integration_tests():
    """–ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤"""
    print("üîó –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤...")
    cmd = [sys.executable, "-m", "pytest", "tests/test_integration_*.py", "-v", "--color=yes"]
    return subprocess.run(cmd).returncode

if __name__ == "__main__":
    if len(sys.argv) > 1:
        if sys.argv[1] == "unit":
            exit_code = run_unit_tests()
        elif sys.argv[1] == "integration":
            exit_code = run_integration_tests()
        else:
            print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python run_tests.py [unit|integration]")
            exit_code = 1
    else:
        exit_code = run_tests()
    
    sys.exit(exit_code)
